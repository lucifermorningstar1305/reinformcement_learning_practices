import numpy as np
import matplotlib.pyplot as plt

from bandit import Bandit


EPS = 0.1
NUM_TRIALS = 10_000
BANDIT_PROBS = [0.2, 0.5, 0.75]


def experiment():
    """Function to perform the epsilon-greedy algorithm."""

    bandits = [Bandit(p) for p in BANDIT_PROBS]

    rewards = np.zeros(NUM_TRIALS)
    num_times_explored = 0
    num_times_exploited = 0
    num_optimal = 0
    optimal_j = np.argmax([b.p for b in bandits])

    print(f"[INITIAL] Optimal Bandit to pull: {optimal_j}")

    for i in range(NUM_TRIALS):
        if np.random.random() < EPS:
            num_times_explored += 1
            j = np.random.choice(len(bandits))
        else:
            num_times_exploited += 1
            j = np.argmax([b.p_estimate for b in bandits])

        if j == optimal_j:
            num_optimal += 1

        x = bandits[j].pull()
        rewards[i] = x

        bandits[j].update(x)

    for b in bandits:
        print(f"Mean estimate: {b.p_estimate:.5f}")

    print(f"total rewards earned: {rewards.sum()}")
    print(f"overall win rate: {rewards.sum() / NUM_TRIALS}")
    print(f"num of times explored: {num_times_explored}")
    print(f"num of times exploited: {num_times_exploited}")
    print(f"num of times optimal bandit was selected: {num_optimal}")

    cumulative_rewards = np.cumsum(rewards)
    win_rates = cumulative_rewards / (np.arange(NUM_TRIALS) + 1)

    plt.plot(win_rates)
    plt.plot(np.ones(NUM_TRIALS) * np.max(BANDIT_PROBS))
    plt.show()


if __name__ == "__main__":
    experiment()
