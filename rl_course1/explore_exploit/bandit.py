import numpy as np


class Bandit:
    def __init__(self, p: float):
        self.n_samples = 0
        self.p_estimate = 0
        self.p = p

    def pull(self):
        """Function to simulate pulling a bandit lever and receiving a reward of 0/1"""
        return np.random.random() < self.p

    def update(self, x: int):
        self.n_samples += 1
        self.p_estimate = (
            1 / self.n_samples * ((self.n_samples - 1) * self.p_estimate + x)
        )


class GaussianBandit:
    def __init__(self, m: float):
        self.n_samples = 0
        self.m_estimate = 0
        self.m = m

    def pull(self) -> float:
        """Function to simulate pulling a bandit lever and receiving a gaussian reward"""
        return np.random.randn() + self.m

    def update(self, x: float):
        self.n_samples += 1
        self.m_estimate = (
            1 / self.n_samples * ((self.n_samples - 1) * self.m_estimate + x)
        )
