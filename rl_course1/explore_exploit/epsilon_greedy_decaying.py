import numpy as np
import matplotlib.pyplot as plt

from bandit import Bandit

BANDIT_PROBS = [0.2, 0.5, 0.75]
NUM_TRIALS = 10_000


def experiment(eps: float):
    """Function to perform Epsilon-Greedy Algorithm"""

    bandits = [Bandit(p) for p in BANDIT_PROBS]

    rewards = np.zeros(NUM_TRIALS)
    num_times_explored = 0
    num_times_exploited = 0
    num_optimals = 0

    optimal_j = np.argmax([b.p for b in bandits])

    for i in range(NUM_TRIALS):
        if np.random.random() < eps:
            j = np.random.choice(len(bandits))
            num_times_explored += 1

        else:
            j = np.argmax([b.p_estimate for b in bandits])
            num_times_exploited += 1

        if j == optimal_j:
            num_optimals += 1

        x = bandits[j].pull()
        rewards[i] = x

        bandits[j].update(x)

        eps = eps / (i + 1)

    for b in bandits:
        print(f"Mean Estimate: {b.p_estimate:.5f}")

    print(f"Total rewards earned: {rewards.sum()}")
    print(f"Number of times explored: {num_times_explored}")
    print(f"Number of times exploited: {num_times_exploited}")
    print(f"Number of times optimal bandit was used: {num_optimals}")

    win_rate = np.cumsum(rewards) / (np.arange(NUM_TRIALS) + 1)

    plt.plot(win_rate)
    plt.plot(np.ones(NUM_TRIALS) * np.max([b.p for b in bandits]))
    plt.show()


if __name__ == "__main__":
    experiment(eps=0.1)
